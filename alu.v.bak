module alu(a_bus,b_bus ,accumulator,zero_flag,opcode):
	input [2:0] opcode;
	input [15:0] a_bus,b_bus;
	output [15:0] reg accumulator;
	output zero_flag;
	
	parameter add=3'b000,sub=3'b001,mul=3'b011;
	
	
	always@(*)
	begin
	case(opcode)
		add: begin
		accumulator=4'h0000;
		accumulator= a_bus +b_bus;
		end
		sub:  begin
		accumulator=4'h0000;
		accumulator= a_bus -b_bus;
		end
		mul:  begin
		accumulator=4'h0000;
		accumulator= a_bus*b_bus;
		end
		end
	end
	assign zero_flag=(accumulator) ? 1'b1:1'b0;
endmodule 
